{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","titleToUpperCase","split","map","word","toUpperCase","slice","join","descriptionToUpperCase","className","src","alt","href","MoviesList","movies","movie","imdbId","initialState","clicked","NewMovie","state","handleSubmit","event","preventDefault","props","onAdd","setState","updateStateValue","target","name","value","isClicked","this","isValid","isURL","length","match","validButton","onSubmit","htmlFor","classNames","error","type","id","required","placeholder","onChange","onBlur","disabled","Component","App","moviesFromServer","addMovie","newMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e24d4e30.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => {\n  const titleToUpperCase = title.split(' ')\n    .map(word => (word[0].toUpperCase() + word.slice(1)))\n    .join(' ');\n\n  const descriptionToUpperCase = description[0].toUpperCase()\n  + description.slice(1);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">\n              {titleToUpperCase}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {descriptionToUpperCase}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable no-useless-escape */\n/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: CallableFunction,\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  clicked: ClickedValues,\n  [key: string]: unknown,\n};\n\ntype ClickedValues = {\n  title: boolean,\n  imgUrl: boolean,\n  imdbUrl: boolean,\n  imdbId: boolean,\n  [key: string]: boolean;\n};\n\nconst initialState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n  clicked: {\n    title: false,\n    imgUrl: false,\n    imdbUrl: false,\n    imdbId: false,\n  },\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    clicked: {\n      title: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n  };\n\n  handleSubmit = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n    this.props.onAdd(this.state);\n\n    this.setState({\n      ...initialState,\n    });\n  };\n\n  updateStateValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    return this.setState({\n      [name]: value,\n    });\n  };\n\n  isClicked = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = event.target;\n\n    this.setState((state) => ({\n      clicked: {\n        ...state.clicked,\n        [name]: true,\n      },\n    }));\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      clicked,\n    } = this.state;\n\n    const isValid = (value: string, isURL: boolean) => {\n      if (isURL) {\n        return value.length > 0\n          && value.match(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n      }\n\n      return value.length > 0;\n    };\n\n    const validButton = (\n      isValid(title, false)\n      && isValid(imgUrl, true)\n      && isValid(imdbUrl, true)\n      && isValid(imdbId, false)\n    );\n\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"title\">\n            <h1>Add Movie</h1>\n          </div>\n          <form\n            className=\"newMovie__form\"\n            onSubmit={this.handleSubmit}\n          >\n            <label htmlFor=\"title\">\n              Title:\n              {' '}\n              <input\n                className={classNames(\n                  'input',\n                  { error: clicked.title && !isValid(title, false) },\n                )}\n                type=\"text\"\n                id=\"title\"\n                value={title}\n                name=\"title\"\n                required\n                placeholder=\"Enter title\"\n                onChange={this.updateStateValue}\n                onBlur={this.isClicked}\n              />\n              {(!isValid(title, false) && clicked.title) && <p>Please, enter title</p>}\n            </label>\n\n            <label htmlFor=\"description\">\n              Description:\n              {' '}\n              <input\n                className=\"input\"\n                type=\"text\"\n                id=\"description\"\n                value={description}\n                name=\"description\"\n                placeholder=\"Enter description\"\n                onChange={this.updateStateValue}\n              />\n            </label>\n\n            <label htmlFor=\"imgUrl\">\n              Image URL:\n              {' '}\n              <input\n                className={classNames(\n                  'input',\n                  { error: clicked.imgUrl && !isValid(imgUrl, true) },\n                )}\n                type=\"text\"\n                id=\"imgUrl\"\n                value={imgUrl}\n                name=\"imgUrl\"\n                required\n                placeholder=\"Enter Img URL\"\n                onChange={this.updateStateValue}\n                onBlur={this.isClicked}\n              />\n              {(!isValid(imgUrl, false) && clicked.imgUrl)\n                ? <p>Please, enter Img URL</p>\n                : (!isValid(imgUrl, true) && clicked.imgUrl) && <p>URL is not correct</p>}\n            </label>\n\n            <label htmlFor=\"imdbUrl\">\n              IMDB URL:\n              {' '}\n              <input\n                className={classNames(\n                  'input',\n                  { error: clicked.imdbUrl && !isValid(imdbUrl, true) },\n                )}\n                type=\"text\"\n                id=\"imdbUrl\"\n                value={imdbUrl}\n                name=\"imdbUrl\"\n                required\n                placeholder=\"Enter IMDB URL\"\n                onChange={this.updateStateValue}\n                onBlur={this.isClicked}\n              />\n              {(!isValid(imdbUrl, false) && clicked.imdbUrl)\n                ? <p>Please, enter IMDB URL</p>\n                : (!isValid(imdbUrl, true) && clicked.imdbUrl) && <p>URL is not correct</p>}\n            </label>\n\n            <label htmlFor=\"imdbId\">\n              IMDB ID:\n              {' '}\n              <input\n                className={classNames(\n                  'input',\n                  { error: clicked.imdbId && !isValid(imdbId, false) },\n                )}\n                type=\"text\"\n                id=\"imdbId\"\n                value={imdbId}\n                name=\"imdbId\"\n                required\n                placeholder=\"Enter IMDB ID\"\n                onChange={this.updateStateValue}\n                onBlur={this.isClicked}\n              />\n              {(!isValid(imdbId, false) && clicked.imdbId) && <p>Please, enter IMDB ID</p>}\n            </label>\n            <div className=\"submit\">\n              <button\n                className=\"submit_button\"\n                type=\"submit\"\n                disabled={!validButton}\n              >\n                Add movie\n              </button>\n            </div>\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((state) => {\n      const newMovie = { ...movie };\n\n      return {\n        movies: [...state.movies, newMovie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}